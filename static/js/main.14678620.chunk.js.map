{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_NAME","SORT_BY_LENGTH","App","useState","sortHow","setSortHow","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","sortGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,OACfC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAAmBC,EAAOL,EAASE,GACjC,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAKd,EACH,OAAOY,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXP,GACFI,EAAcM,UAGTN,EAMcO,CAAUlB,EAAiBK,EAASE,GAEzD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYhB,IAAYJ,IAC5BqB,QAAS,kBAAMhB,EAAWL,IAJ5B,iCASA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYhB,IAAYH,IAC5BoB,QAAS,kBAAMhB,EAAWJ,IAJ5B,4BASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAad,IACjBe,QAAS,kBAAMd,GAAcD,IAJ/B,sBASEF,GAAWE,IACX,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAW,IACXE,GAAa,IALjB,sBAaJ,6BACGC,EACEc,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9F/CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.14678620.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_NAME = 'name';\nconst SORT_BY_LENGTH = 'length';\n\nfunction sortGoods(goods, sortHow, isReverse) {\n  const preparedGoods = [...goods];\n\n  if (sortHow) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortHow) {\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_BY_NAME:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortHow, setSortHow] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = sortGoods(goodsFromServer, sortHow, isReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortHow !== SORT_BY_NAME })}\n          onClick={() => setSortHow(SORT_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortHow !== SORT_BY_LENGTH })}\n          onClick={() => setSortHow(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReverse })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortHow || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortHow('');\n              setIsReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods\n          .map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}